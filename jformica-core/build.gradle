apply plugin: 'java'
apply plugin: 'eclipse'

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

dependencies {
    compile fileTree(dir: 'libs', include: '**/*.jar')
    testCompile "junit:junit:4.8.2"
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'net.vidageek:mirror:1.6.1'
}

task copyJarToAndroid(type: Copy, dependsOn: 'deleteAndroidJar') {
    from 'build/libs'
    into rootDir.getAbsolutePath() + '/jformica_android/libs'
    include '**/jformica_core*.jar'

}

task deleteAndroidJar {
    file(rootDir.getAbsolutePath() + '/jformica_android/libs').listFiles().findAll {it.name.startsWith('jformica_core')}.collect {if (it instanceof java.io.File) it.delete()}
}

//gradle.afterProject {project, projectState ->
//    if (projectState.failure) {
//        println "Evaluation of $project FAILED"
//    } else {
//        tasks['copyJarToAndroid'].execute() 
//    }
//}

gradle.taskGraph.afterTask { Task task, TaskState state ->
    if (state.failure) {
    }
    else {
        if (task.name == 'jar') {
            tasks['copyJarToAndroid'].execute()
        }
    }
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn:javadoc) {
     classifier = 'javadoc'
     from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}  

eclipse {
  project {
    name = 'JFormica - core'
    comment = 'Core functionality independent of drivers'
  }
}
